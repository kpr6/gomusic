{"version":3,"sources":["ProductCards.js","Navigation.js","CreditCards.js","modalwindows.js","About.js","orders.js","App.js","serviceWorker.js","index.js"],"names":["Card","_this","this","priceColor","props","promo","console","log","sellPrice","price","react_default","a","createElement","className","src","img","alt","imgalt","productname","desc","onClick","showBuyModal","ID","React","Component","CardContainer","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","cards","_this3","fetch","location","then","res","json","result","setState","_this4","items","map","card","ProductCards_Card","assign","key","id","Navigation","type","data-toggle","aria-haspopup","aria-expanded","user","name","role","loggedin","buildLoggedInMenu","showModalWindow","react_router_dom","to","INITIALSTATE","CreditCardForm","status","handleInputChange","bind","assertThisInitialized","renderCreditCardInformation","renderFailure","renderSuccess","handleSubmit","event","preventDefault","useExisting","stripe","createToken","token","method","headers","Content-Type","body","JSON","stringify","customer_id","product_id","productid","sell_price","rememberCard","undefined","remember","ok","value","target","usersavedcard","remembercardcheck","htmlFor","onSubmit","placeholder","onChange","es","style","base","fontSize","color","fontFamily","operation","toggle","CreditCardInformation","show","CCFormWithStripe","injectStripe","apiKey","BuyModalWindow","Modal","tabIndex","isOpen","showModal","ModalHeader","ModalBody","SignInForm","handleChange","errormessage","defineProperty","message","length","handleNewUser","Registration","SignInModalWindow","_React$Component3","showRegistrationForm","inherits","createClass","modalBody","modalwindows_SignInForm","modalwindows_Registration","About","Order","days","OrderContainer","orders","order","App","showSignInModalWindow","toggleSignInModalWindow","showBuyModalWindow","toggleBuyModalWindow","newState","showSignInModal","Navigation_Navigation","react_router","exact","path","render","ProductCards_CardContainer","orders_OrderContainer","component","modalwindows_SignInModalWindow","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.80be76df.chunk.js","sourcesContent":["import React from 'react';\n\nclass Card extends React.Component {\n    render() {\n        const priceColor = (this.props.promo)? \"text-danger\" : \"text-dark\";\n        console.log(priceColor)\n        // const sellPrice = (this.props.promo)?this.props.promotion:this.props.price;\n        const sellPrice = this.props.price;\n        return (\n            <div className=\"col-md-6 col-lg-4 d-flex align-items-stretch\">\n                <div className=\"card mb-3\">\n                    <img className=\"card-img-top\" src={this.props.img} alt={this.props.imgalt} />\n                    <div className=\"card-body\">\n                        <h4 className=\"card-title\">{this.props.productname}</h4>\n                        Price: <strong className={priceColor}>{sellPrice}</strong>\n                        <p className=\"card-text\">{this.props.desc}</p>\n                        <a className=\"btn btn-success text-white\"  onClick={()=>{this.props.showBuyModal(this.props.ID,sellPrice)}}>Buy</a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class CardContainer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            cards: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(this.props.location)\n        .then(res => res.json())\n        .then((result) => {\n            this.setState({\n                cards: result\n            });\n        });\n    }\n\n    render(){\n        const cards = this.state.cards;\n        let items = cards.map(\n            card => <Card key={card.id} {...card} promo={this.props.promo} showBuyModal={this.props.showBuyModal}/>\n        );\n        return (\n            <div>\n                <div className=\"mt-5 row\">\n                    {items}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nexport default class Navigation extends React.Component{\n    buildLoggedInMenu(){\n        return (\n            <div className=\"navbar-brand order-1 text-white my-auto\">\n                <div className=\"btn-group\">\n                    <button type=\"button\" className=\"btn btn-success dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Welcome {this.props.user.name}\n                    </button>\n                    <div className=\"dropdown-menu\">\n                        <a className=\"btn dropdown-item\" role=\"button\">Sign Out</a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    render(){\n        //The code to describe how our menu would look like\n        return (\n        <div>\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-success fixed-top\">\n                <div className=\"container\">\n                    {\n                        this.props.user.loggedin ?\n                            this.buildLoggedInMenu()\n                            : <button type=\"button\" className=\"navbar-brand order-1 btn btn-success\" onClick={() => { this.props.showModalWindow();}}>Sign in</button>\n                    }\n                    <div className=\"navbar-collapse\" id=\"navbarNavAltMarkup\">\n                        <div className=\"navbar-nav\">\n                            <NavLink className=\"nav-item nav-link\" to=\"/\">Home</NavLink>\n                            <NavLink className=\"nav-item nav-link\" to=\"/promos\">Promotions</NavLink>                             \n                            <NavLink className=\"nav-item nav-link\" to=\"/about\">About</NavLink>\n                            {this.props.user.loggedin ? <NavLink className=\"nav-item nav-link\" to=\"/myorders\">My Orders</NavLink> : null}\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </div>\n    );\n  }\n}","import React from 'react';\nimport { injectStripe, StripeProvider, Elements, CardElement } from 'react-stripe-elements';\n\nconst INITIALSTATE = \"INITIAL\", SUCCESSSTATE = \"COMPLETE\", FAILEDSTATE = \"FAILED\";\nclass CreditCardForm extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            status: INITIALSTATE\n        };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.renderCreditCardInformation = this.renderCreditCardInformation.bind(this);\n    this.renderFailure = this.renderFailure.bind(this);\n    this.renderSuccess = this.renderSuccess.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        let id = \"\";\n       //If we are not using a pre-saved card, connect with stripe to obtain a card token\n        if (!this.state.useExisting) {\n           //Create the token via Stripe's API\n            let { token } = await this.props.stripe.createToken({ name: this.state.name });\n            if (token == null) {\n                console.log(\"invalid token\");\n                this.setState({ status: FAILEDSTATE });\n                return;\n            }\n            id = token.id;\n        }\n        //Create the request, then send it to the back-end\n        let response = await fetch(\"/users/charge\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                token: id,\n                customer_id: this.props.user,\n                product_id: this.props.productid,\n                sell_price: this.props.price,\n                rememberCard: this.state.remember !== undefined,\n                useExisting: this.state.useExisting\n            })\n        });\n        //If response is ok, consider the operation a success\n        if (response.ok) {\n            console.log(\"Purchase Complete!\");\n            this.setState({ status: SUCCESSSTATE });\n        } else {\n            this.setState({ status: FAILEDSTATE });\n        }\n    }\n\n    handleInputChange(event) {\n        this.setState({\n            value: event.target.value\n        });\n    }\n    renderCreditCardInformation(){\n        const style = {\n              base: {\n                  'fontSize': '20px',\n                  'color': '#495057',\n                  'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\n              }\n        };\n        const usersavedcard = <div>\n            <div className=\"form-row text-center\">\n                <button type=\"button\" className=\"btn btn-outline-success text-center mx-auto\">Use saved card?</button>\n            </div>\n            <hr />\n        </div>\n\n        const remembercardcheck = <div className=\"form-row form-check text-center\">\n            <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"remembercardcheck\" />\n            <label className=\"form-check-label\" htmlFor=\"remembercardcheck\">\n                Remember Card?\n            </label>\n        </div>;\n        return (\n            <div>\n                {usersavedcard}\n                <h5 className=\"mb-4\">Payment Info</h5>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"cc-name\">Name On Card:</label>\n                            <input id=\"cc-name\" name='cc-name' className=\"form-control\" placeholder='Name on Card' onChange={this.handleInputChange} type='text' />\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"card\">Card Information:</label>\n                            <CardElement id=\"card\" className=\"form-control\" style={style} />\n                        </div>\n                    </div>\n                    {remembercardcheck}\n                    <hr className=\"mb-4\" />\n                    <button type=\"submit\" className=\"btn btn-success btn-large\" >{this.props.operation}</button>\n                </form>\n            </div>\n        );  \n    }\n    renderSuccess(){\n        return (\n            <div>\n                <h5 className=\"mb-4 text-success\">Request Successfull....</h5>\n                <button type=\"submit\" className=\"btn btn-success btn-large\" onClick={() => { this.props.toggle() }}>Ok</button>\n            </div>\n        );\n    }\n    renderFailure(){\n        return (\n            <div>\n                <h5 className=\"mb-4 text-danger\"> Credit card information invalid, try again or exit</h5>\n                {this.renderCreditCardInformation()}\n            </div>\n        );\n    }\n    \n    render() {\n        let body = null;\n        switch (this.state.status) {\n            case SUCCESSSTATE:\n                body = this.renderSuccess();\n                break;\n            case FAILEDSTATE:\n                body = this.renderFailure();\n                break;\n            default:\n                body = this.renderCreditCardInformation();\n        }\n\n        return (\n            <div>\n                {body}\n            </div>\n        );\n    }\n}\n\nexport default function CreditCardInformation(props){\n    if (!props.show) {\n        return <div/>;\n    }\n   //inject our CreditCardForm component with stripe code in order to be able to make use of the createToken() method\n    const CCFormWithStripe = injectStripe(CreditCardForm);\n    return (\n        <div>\n            {/*stripe provider*/}\n            <StripeProvider apiKey=\"pk_test_LwL4RUtinpP3PXzYirX2jNfR\">\n                <Elements>\n                    {/*embed our credit card form*/}\n                    <CCFormWithStripe operation={props.operation} />\n                </Elements>\n            </StripeProvider>\n        </div>\n    );\n}","import React from 'react';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport CreditCardInformation from './CreditCards';\n\nexport function BuyModalWindow(props){\n    return (\n           <Modal id=\"buy\" tabIndex=\"-1\" role=\"dialog\" isOpen={props.showModal} toggle={props.toggle}>\n              <div role=\"document\">\n                  <ModalHeader toggle={props.toggle} className=\"bg-success text-white\">\n                      Buy Item\n                  </ModalHeader>\n                  <ModalBody>\n                    <CreditCardInformation show={true} operation=\"Charge\" toggle={props.toggle} />\n                  </ModalBody>\n              </div>\n           </Modal>\n          );\n}\n\nclass SignInForm extends React.Component{\n    constructor(props){\n        super(props);\n        //this method will get called whenever a user input data into our form\n        this.handleChange = this.handleChange.bind(this);\n        //this method will get called whenever the HTML form gets submitted\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            errormessage : ''\n        };\n    }\n\n    handleChange(event){\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n              [name]: value\n        });\n    }\n\n     handleSubmit(event){\n        event.preventDefault();\n        console.log(JSON.stringify(this.state));\n    }\n\n    render(){\n        //error message\n        let message = null;\n        //if the state contains an error message, show an error\n        if (this.state.errormessage.length !== 0) {\n            message = <h5 className=\"mb-4 text-danger\">{this.state.errormessage}</h5>;\n        }\n\n        return (\n            <div>\n                {message}\n                <form onSubmit={this.handleSubmit}>\n                    <h5 className=\"mb-4\">Basic Info</h5>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email:</label>\n                        <input name=\"email\" type=\"email\" className=\"form-control\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"pass\">Password:</label>\n                        <input name=\"password\" type=\"password\" className=\"form-control\" id=\"pass\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-row text-center\">\n                        <div className=\"col-12 mt-2\">\n                            <button type=\"submit\" className=\"btn btn-success btn-large\">Sign In</button>\n                        </div>\n                        <div className=\"col-12 mt-2\">\n                            <button type=\"submit\" className=\"btn btn-link text-info\" onClick={() => this.props.handleNewUser()}> New User? Register</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nclass Registration extends React.Component{\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            errormessage: ''\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(event) {\n        event.preventDefault();\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        console.log(this.state);\n    }\n\n    render() {\n        let message = null;\n        if (this.state.errormessage.length !== 0) {\n            message = <h5 className=\"mb-4 text-danger\">{this.state.errormessage}</h5>;\n        }\n        return (\n            <div>\n                {message}\n                <form onSubmit={this.handleSubmit}>\n                    <h5 className=\"mb-4\">Registeration</h5>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">User Name:</label>\n                        <input id=\"username\" name='username' className=\"form-control\" placeholder='John Doe' type='text' onChange={this.handleChange} />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email:</label>\n                        <input type=\"email\" name='email' className=\"form-control\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"pass\">Password:</label>\n                        <input type=\"password\" name='pass1' className=\"form-control\" id=\"pass1\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"pass\">Confirm password:</label>\n                        <input type=\"password\" name='pass2' className=\"form-control\" id=\"pass2\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"form-row text-center\">\n                        <div className=\"col-12 mt-2\">\n                            <button type=\"submit\" className=\"btn btn-success btn-large\">Register</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport class SignInModalWindow extends React.Component{  \n    constructor(props) {\n        super(props);\n        this.state = {\n        showRegistrationForm: false\n        };\n        this.handleNewUser = this.handleNewUser.bind(this);\n    }\n\n    handleNewUser() {\n        this.setState({\n            showRegistrationForm: true\n        });\n    }\n\n    render(){\n        let modalBody = <SignInForm handleNewUser={this.handleNewUser} />\n        if (this.state.showRegistrationForm === true) {\n            modalBody = <Registration />\n        }\n     return (\n        <Modal id=\"register\" tabIndex=\"-1\" role=\"dialog\" isOpen={this.props.showModal} toggle={this.props.toggle}>\n            <div role=\"document\">\n                <ModalHeader toggle={this.props.toggle} className=\"bg-success text-white\">\n                    Sign in\n                    {/*<button className=\"close\">\n                        <span aria-hidden=\"true\">&times;</span>\n                     </button>*/}\n                </ModalHeader>\n                <ModalBody>\n                    {modalBody}\n                </ModalBody>\n            </div>\n        </Modal>\n        );\n    }\n}","import React from 'react';\n\nexport default function About(props){\n    return (\n        <div className=\"row mt-5\">\n            <div className=\"col-12 order-lg-1\">\n                <h3 className=\"mb-4\">About the Go Music Store</h3>\n                <p>Go music is a modern online musical instruments store</p>\n                <p>Explore how you can combine the power of React and Go, to build a fast and beautiful looking online store.</p>\n                <p>We will cover how to build this website step by step.</p>\n            </div>\n        </div>);\n}","import React from 'react';\n\nfunction Order(props){\n    return (\n        <div className=\"col-12\">\n            <div className=\"card text-center\">\n                <div className=\"card-header\"><h5>{props.productname}</h5></div>\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        <div className=\"mx-auto col-6\">\n                            <img src={props.img} alt={props.imgalt} className=\"img-thumbnail float-left\" />\n                        </div>\n                        <div className=\"col-6\">\n                            <p className=\"card-text\">{props.desc}</p>\n                            <div className=\"mt-4\">\n                                Price: <strong>{props.price}</strong>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"card-footer text-muted\">\n                    Purchased {props.days} days ago\n                </div>\n            </div>\n            <div className=\"mt-3\" />\n        </div>\n    );   \n}\n\nexport default class OrderContainer extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            orders: []\n        };\n    }\n\n    render(){\n        return (\n            <div className=\"row mt-5\">\n                {this.state.orders.map(order => <Order key={order.id} {...order} />)}\n            </div>\n        );\n}\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport CardContainer from './ProductCards';\nimport Nav from './Navigation';\nimport { SignInModalWindow, BuyModalWindow } from './modalwindows';\nimport About from './About';\nimport Orders from './orders';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        loggedin: false,\n        name: \"\"\n      }\n    };\n    this.showSignInModalWindow = this.showSignInModalWindow.bind(this);\n    this.toggleSignInModalWindow = this.toggleSignInModalWindow.bind(this);\n    this.showBuyModalWindow = this.showBuyModalWindow.bind(this);\n    this.toggleBuyModalWindow = this.toggleBuyModalWindow.bind(this);\n  } \n  showSignInModalWindow(){\n    const state = this.state;\n    const newState = Object.assign({},state,{showSignInModal:true});\n    this.setState(newState);\n  }\n  showBuyModalWindow(id,price){\n    const state = this.state;\n    const newState = Object.assign({},state,{showBuyModal:true,productid:id,price:price});\n    this.setState(newState);\n  }\n  toggleSignInModalWindow() {\n    const state = this.state;\n    const newState = Object.assign({},state,{showSignInModal:!state.showSignInModal});\n    this.setState(newState);\n  }\n\n  toggleBuyModalWindow(){\n    const state = this.state;\n    const newState = Object.assign({},state,{showBuyModal:!state.showBuyModal});\n    this.setState(newState); \n  }\n  render() {\n    return (\n      <div>\n        <Router>\n          <div>\n            <Nav user={this.state.user} showModalWindow={this.showSignInModalWindow}/>\n            <div className='container pt-4 mt-4'>\n              <Route exact path=\"/\" render={() => <CardContainer location='cards.json' showBuyModal={this.showBuyModalWindow} />} />\n              <Route path=\"/promos\" render={() => <CardContainer location='promos.json' promo={true} showBuyModal={this.showBuyModalWindow}/>} />\n              {this.state.user.loggedin ? <Route path=\"/myorders\" render={()=><Orders location='user.json'/>}/> : null}\n              <Route path=\"/about\" component={About} />\n            </div>\n            <SignInModalWindow showModal={this.state.showSignInModal} toggle={this.toggleSignInModalWindow}/>\n            <BuyModalWindow showModal={this.state.showBuyModal} toggle={this.toggleBuyModalWindow}  productid={this.state.productid} price={this.state.price}/>\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}